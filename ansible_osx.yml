---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: []

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - alfred
        - google-chrome
        - kindle
        - ngrok
        - slack
        - telegram
        - visual-studio-code
        - vlc
        - postman
        - postico
        - postgres-unofficial
        - docker
        - iterm2
        - fig

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          'autoconf',
          'automake',
          'awscli',
          'coreutils',
          'curl',
          'direnv',
          'expect',
          'fzf',
          'gnu-time',
          'gpg',
          'htop',
          'kubectx',
          'kubernetes-cli',
          'kubernetes-helm',
          'libtool',
          'libxslt',
          'libyaml',
          'mas',
          'openssl' ,
          'pkg-config',
          'readline',
          'sqlite3',
          'tmux',
          'unixodbc',
          'unzip',
          'neovim',
          'watchman',
          'yarn',
          'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    # - name: "Install from Mac app store"
    #   shell: mas install {{ item }}
      # with_items:
      #   - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    # Add something which ensures path is set here
    - name: Install VSCode extensions
      shell: code --install-extension {{ item }}
      with_items:
        - bradlc.vscode-tailwindcss
        - eamodio.gitlens
        - jakebecker.elixir-ls
        - wholroyd.jinja
        - wingrunr21.vscode-ruby
        - fabiospampinato.vscode-todo-plus

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.8.1

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: yes

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - ruby
        - elixir
        - nodejs
        - python
        - erlang

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.10.0
        asdf global python 3.10.0
        pip3 install ansible
        asdf reshim python

    - name: "Install default node"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        bash /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/nodejs/bin/import-release-team-keyring
        asdf install nodejs 16.4.2
        asdf global nodejs 16.4.2

    - name: "Install default erlang"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install erlang 25.3.2
        asdf global erlang 25.3.2


    - name: "Install default elixir"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install elixir 1.14.4-otp-25
        asdf global elixir 1.14.4-otp-25
        mix local.hex --force
